@using BlazorDemo.Client.Stores

@inject TodoStore TodoStore
@inject IJSRuntime JS

@implements IDisposable

<header>
    <section>
        <NavLink href="/">
            <MudIconButton Color="Color.Secondary" Size="Size.Large" Icon="@Icons.Material.Filled.Home">
            </MudIconButton>
        </NavLink>

        <MudText Color="Color.Secondary">Hello @UserName</MudText>

        @if (TodoStore.LoadingTableData)
        {
            <div>
                <MudText Color="Color.Secondary"> Loading ... </MudText>
            </div>
        }
        else
        {
            <div>
                <MudText Color="Color.Secondary"> @TodoStore.UnfinishedTasks unfinished tasks! </MudText>
            </div>
            <MudButton 
                 Color="Color.Secondary" 
                 StartIcon="@Icons.Material.Filled.Alarm" 
                 OnClick="(e => JavascriptTest())"></MudButton>
        }
    </section>
</header>

@code {
    [Parameter]
    public string UserName { get; set; } = "";

    protected override void OnInitialized()
    {
        TodoStore.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        TodoStore.OnChange -= StateHasChanged;
    }

    public async void JavascriptTest ()
    {
        var result = await JS.InvokeAsync<string>("ReturnText", "This is just to test js interop");
        Console.WriteLine(result);
        await JS.InvokeVoidAsync("AlertWithText", "This is just to test js interop");
    }
}
