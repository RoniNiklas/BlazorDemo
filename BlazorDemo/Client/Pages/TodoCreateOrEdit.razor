@page "/todos/createOrEdit/{Id:int?}"

@using BlazorDemo.Shared
@using MudBlazor
@using System.Globalization
@using BlazorDemo.Client.Components 

@inject NavigationManager NavigationManager
@inject HttpClient Http

<h1>Create or edit Todos</h1>

<p>Add or edit a todo.</p>

@if (Loading)
{
    <p><em>Loading...</em></p>
}
else if (Todo == null)
{
    <p><em>Not found!</em></p>
} else {
<EditForm Model="@Todo" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Assignee" HelperText="Max. 30 characters" Required="true"
                          @bind-Value="Todo.Assignee" For="@(() => Todo.Assignee)" />

            <MudTextField Label="Summary" HelperText="Max. 30 characters" Required="true"
                          @bind-Value="Todo.Summary" For="@(() => Todo.Summary)" />

            <MudTextField Label="Details" HelperText="Max 100 characters" Required="true"
                          @bind-Value="Todo.Details" For="@(() => Todo.Details)" />

            <MudDatePicker Label="Date Assigned" Editable="true" Culture="@FinnishCulture" DateFormat="dd/MM/yyyy"
                           @bind-Date="Todo.DateAssigned" />

            <MudDatePicker Label="Due Date" Editable="true" Culture="@FinnishCulture" DateFormat="dd/MM/yyyy" Required="true"
                           @bind-Date="Todo.DueDate" />

            <MudDatePicker Label="Date Finished" Editable="true" Culture="@FinnishCulture" DateFormat="dd/MM/yyyy"
                           @bind-Date="Todo.DateFinished" />

        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
                Save
            </MudButton>
        </MudCardActions>
    </MudCard>

    <MudExpansionPanels>
        <MudExpansionPanel HideIcon="true" Text="Validation Summary" IsExpanded="true">
            <MudText Color="@Color.Error">
                <ValidationSummary />
            </MudText>
        </MudExpansionPanel>
    </MudExpansionPanels>

    <input @bind-value="Todo.Assignee" />

    <TodoPreview Todo="Todo" />

</EditForm>
}

@code {
    [Parameter]
    public int? Id { get; set; } 
    private TodoDetailsVM? Todo { get; set; }
    private bool Loading = true;
    private CultureInfo FinnishCulture = CultureInfo.GetCultureInfo("fi");

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (Id.HasValue)
            {
              Todo = await Http.GetFromJsonAsync<TodoDetailsVM?>($"http://localhost:5000/todos/{Id}", cancellationToken: default);
            } else {
              Todo = new TodoDetailsVM();
            }
            
            Loading = false;
         } catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    private async void OnValidSubmit(EditContext context)
    {
        var result = await Http.PostAsJsonAsync("http://localhost:5000/todos/", Todo);
        if (result.IsSuccessStatusCode) {
            NavigationManager.NavigateTo("http://localhost:5001/");
        } else
        {
            Console.WriteLine("Server refused request");
        }
    }
}
